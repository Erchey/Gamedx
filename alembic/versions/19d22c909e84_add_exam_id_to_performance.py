"""Add exam_id to performance

Revision ID: 19d22c909e84
Revises: b8a56f4ea67f
Create Date: 2024-10-05 15:18:16.033349

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '19d22c909e84'
down_revision: Union[str, None] = 'b8a56f4ea67f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # op.drop_table('part_config_sub')
    op.drop_index('part_config_type_idx', table_name='part_config')
    # op.drop_table('part_config')
    op.drop_index('ix_todos_id', table_name='todos')
    op.drop_table('todos')
    op.drop_index('ix_users_id', table_name='users')
    op.drop_table('users')
    op.add_column('performance', sa.Column('exam_id', sa.Integer(), nullable=True))
    op.add_column('performance', sa.Column('complete', sa.Boolean(), nullable=True))
    op.create_foreign_key(None, 'performance', 'exams', ['exam_id'], ['id'])
    op.drop_column('performance', 'exam_type')
    op.add_column('subjects', sa.Column('subject_name', sa.String(), nullable=True))
    op.drop_constraint('subjects_subject_key', 'subjects', type_='unique')
    op.drop_column('subjects', 'subject')
    op.drop_column('subjects', 'hours_weekly')
    op.drop_column('subjects', 'no_of_students')
    op.add_column('teachers', sa.Column('gender', sa.String(), nullable=True))
    op.add_column('teachers', sa.Column('age', sa.Integer(), nullable=True))
    op.add_column('teachers', sa.Column('address', sa.String(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('teachers', 'address')
    op.drop_column('teachers', 'age')
    op.drop_column('teachers', 'gender')
    op.add_column('subjects', sa.Column('no_of_students', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('subjects', sa.Column('hours_weekly', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('subjects', sa.Column('subject', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.create_unique_constraint('subjects_subject_key', 'subjects', ['subject'])
    op.drop_column('subjects', 'subject_name')
    op.add_column('performance', sa.Column('exam_type', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'performance', type_='foreignkey')
    op.drop_column('performance', 'complete')
    op.drop_column('performance', 'exam_id')
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('users_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('first_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('last_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('hashed_password', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('role', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('phone_number', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    sa.UniqueConstraint('email', name='users_email_key'),
    sa.UniqueConstraint('username', name='users_username_key'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_users_id', 'users', ['id'], unique=False)
    op.create_table('todos',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('priority', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('complete', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('owner_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], name='todos_owner_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='todos_pkey')
    )
    op.create_index('ix_todos_id', 'todos', ['id'], unique=False)
    op.create_table('part_config',
    sa.Column('parent_table', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('control', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('partition_interval', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('partition_type', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('premake', sa.INTEGER(), server_default=sa.text('4'), autoincrement=False, nullable=False),
    sa.Column('automatic_maintenance', sa.TEXT(), server_default=sa.text("'on'::text"), autoincrement=False, nullable=False),
    sa.Column('template_table', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('retention', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('retention_schema', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('retention_keep_index', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=False),
    sa.Column('retention_keep_table', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=False),
    sa.Column('epoch', sa.TEXT(), server_default=sa.text("'none'::text"), autoincrement=False, nullable=False),
    sa.Column('constraint_cols', postgresql.ARRAY(sa.TEXT()), autoincrement=False, nullable=True),
    sa.Column('optimize_constraint', sa.INTEGER(), server_default=sa.text('30'), autoincrement=False, nullable=False),
    sa.Column('infinite_time_partitions', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('datetime_string', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('jobmon', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=False),
    sa.Column('sub_partition_set_full', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('undo_in_progress', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('inherit_privileges', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True),
    sa.Column('constraint_valid', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=False),
    sa.Column('ignore_default_data', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=False),
    sa.Column('default_table', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=True),
    sa.Column('date_trunc_interval', sa.TEXT(), autoincrement=False, nullable=True),
    sa.CheckConstraint("retention_schema <> ''::text", name='retention_schema_not_empty_chk'),
    sa.CheckConstraint('(constraint_cols @> ARRAY[control]) <> true', name='control_constraint_col_chk'),
    sa.CheckConstraint('check_automatic_maintenance_value(automatic_maintenance)', name='part_config_automatic_maintenance_check'),
    sa.CheckConstraint('check_epoch_type(epoch)', name='part_config_epoch_check'),
    sa.CheckConstraint('check_partition_type(partition_type)', name='part_config_type_check'),
    sa.CheckConstraint('premake > 0', name='positive_premake_check'),
    sa.PrimaryKeyConstraint('parent_table', name='part_config_parent_table_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('part_config_type_idx', 'part_config', ['partition_type'], unique=False)
    op.create_table('part_config_sub',
    sa.Column('sub_parent', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('sub_control', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('sub_partition_interval', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('sub_partition_type', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('sub_premake', sa.INTEGER(), server_default=sa.text('4'), autoincrement=False, nullable=False),
    sa.Column('sub_automatic_maintenance', sa.TEXT(), server_default=sa.text("'on'::text"), autoincrement=False, nullable=False),
    sa.Column('sub_template_table', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('sub_retention', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('sub_retention_schema', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('sub_retention_keep_index', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=False),
    sa.Column('sub_retention_keep_table', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=False),
    sa.Column('sub_epoch', sa.TEXT(), server_default=sa.text("'none'::text"), autoincrement=False, nullable=False),
    sa.Column('sub_constraint_cols', postgresql.ARRAY(sa.TEXT()), autoincrement=False, nullable=True),
    sa.Column('sub_optimize_constraint', sa.INTEGER(), server_default=sa.text('30'), autoincrement=False, nullable=False),
    sa.Column('sub_infinite_time_partitions', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('sub_jobmon', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=False),
    sa.Column('sub_inherit_privileges', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True),
    sa.Column('sub_constraint_valid', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=False),
    sa.Column('sub_ignore_default_data', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=False),
    sa.Column('sub_default_table', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=True),
    sa.Column('sub_date_trunc_interval', sa.TEXT(), autoincrement=False, nullable=True),
    sa.CheckConstraint("sub_retention_schema <> ''::text", name='retention_schema_not_empty_chk'),
    sa.CheckConstraint('(sub_constraint_cols @> ARRAY[sub_control]) <> true', name='control_constraint_col_chk'),
    sa.CheckConstraint('check_automatic_maintenance_value(sub_automatic_maintenance)', name='part_config_sub_automatic_maintenance_check'),
    sa.CheckConstraint('check_epoch_type(sub_epoch)', name='part_config_sub_epoch_check'),
    sa.CheckConstraint('check_partition_type(sub_partition_type)', name='part_config_sub_type_check'),
    sa.CheckConstraint('sub_premake > 0', name='positive_premake_check'),
    sa.ForeignKeyConstraint(['sub_parent'], ['part_config.parent_table'], name='part_config_sub_sub_parent_fkey', onupdate='CASCADE', ondelete='CASCADE', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('sub_parent', name='part_config_sub_pkey')
    )
    # ### end Alembic commands ###
